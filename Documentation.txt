Equality Flags:
    ZeroFlag    : set to true if top value on the stack is not equal to second-top value on the stack, and vice versa

Instruction Syntax:
    PUSH X  : Push value X onto the stack
    POP     : Remove value from top of stack
    PEEK    : Print value on top of stack
    PEEK++  : Increment the value on the top of the stack
    PEEK--  : Decrement the value on the top of the stack
    ADD     : Peek at the top two values on the stack, add them together, then push the sum onto the stack
    SUB     : Peek at the top two values on the stack, subtract the top value from the second value, and push the sum
              onto the stack
    MUL     : Pops the top two values on the stack, multiply them together, then push the sum onto the stack
    DIV     : Pops the top two values on the stack, divide the top value from the second value, and push the sum
              onto the stack
    MOD     : Pops the top two values on the stack, divide the top value from the second value, and push the remainder
              onto the stack
    COMPARE : Peek at the top two values on the stack, compare them, then set the equality flags according to the result
    JNE X Y : Jump to line number X if the ZeroFlag == true, otherwise, jump to line number Y
    JE X Y  : Jump to line number X if the ZeroFlag == false, otherwise, jump to line number Y
    JUMP X  : Unconditionally jump to line number X
    PRINT X : Prints the word X to the console. If the word ends with "^", the command prints a newline character as well
    HALT X  : Exit the program with exit code X (X must be no lower than 0, and no larger than 255)
    GET     : Gets a number from the console, and pushes it onto the stack
    BRING X : Copies the value at stack entry X up to top of the stack, then pushes the previous top value on top of that
    NOP     : Does nothing

Notes:
    -The print command can only take in one token (one piece of text without spaces) at a time. However, all underscores
     in that token are replaced with spaces



